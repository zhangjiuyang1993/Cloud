<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <!-- 加载jdbc属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 组件扫面 -->
    <context:component-scan base-package="com.bjtu.cloud.*"></context:component-scan>

    <!-- 第一步：配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>

    </bean>

    <!-- 第二步：创建sqlSessionFactory 生产sqlSession -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
        <property name="mapperLocations">
            <array>
                <value>classpath:com/bjtu/cloud/docker/mapper/*.xml</value>
                <value>classpath:com/bjtu/cloud/file/mapper/*.xml</value>
                <value>classpath:com/bjtu/cloud/process/mapper/*.xml</value>
                <value>classpath:com/bjtu/cloud/user/mapper/*.xml</value>
                <value>classpath:com/bjtu/cloud/message/mapper/*.xml</value>
            </array>
        </property>
    </bean>
    <!-- 配置mybatis接口代理开发 * 接口类名和映射文件必须同名 * 接口类和映射文件必须在同一个目录下 * 映射文件的namespace名称必须是接口的全类路径名
        * 接口的方法名必须和映射Statement的id一致 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.bjtu.cloud.docker.dao,
											com.bjtu.cloud.file.dao,
											com.bjtu.cloud.process.dao,
											com.bjtu.cloud.user.dao,
											com.bjtu.cloud.message.dao"></property>
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property> -->
    </bean>

    <!-- 第三步：事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 配置通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="create*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!-- 配置拦截service -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.bjtu.cloud.*.service.*.*(..))"/>
    </aop:config>

</beans>
